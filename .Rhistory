range(data1$Clicks)
data1$Age_Group <- cut(data1$Age, c(-Inf, 18, 24, 34, 44, 54, 64, Inf))
levels(data1$Age_Group) <- c("<18", "18-24", "25-34", "35-44", "45-54", "55-64", "65+")
head(data1)
d1 <- subset(data1, Impressions>0)
##Add a column to d1 called CTR containing the click-through-rate
d1$CTR <- d1$Clicks/d1$Impressions
head(d1)
ggplot(subset(d1, Impressions>0), aes(x=Impressions, fill=Age_Group))+
geom_histogram(binwidth=1)
ggplot(subset(d1, CTR>0), aes(x=CTR, fill=Age_Group))+
labs(title="Click-through rate by age group (05/01/2012)")+
geom_histogram(binwidth=.025)
d1 %>% filter(Impressions>0 & Signed_In == 1 & Gender == 'female') %>% ggplot(aes(x=ageGroup, y=Impressions, fill=ageGroup)) + geom_bar(stat="identity") + theme_bw()
d1 %>% filter(Impressions>0 & Signed_In == 1 & Gender == 'female') %>% ggplot(aes(x=ageGroup, y=Impressions, fill=Age_Group)) + geom_bar(stat="identity") + theme_bw()
d1 %>% filter(Impressions>0 & Signed_In == 1 & Gender == 'female') %>% ggplot(aes(x=Age_Group, y=Impressions, fill=Age_Group)) + geom_bar(stat="identity") + theme_bw()
d1 %>% filter(Impressions>0 & Signed_In == 1 & Gender == '0') %>% ggplot(aes(x=Age_Group, y=Impressions, fill=Age_Group)) + geom_bar(stat="identity") + theme_bw()
fileLocation <- "http://stat.columbia.edu/~rachel/datasets/nyt1.csv"
nytData <- read.csv(url(fileLocation))
head(nytData)
library(dplyr)
library(ggplot2)
library(tidyr)
str(nytData)
nytData$ageGroup <- cut(nytData$Age, c(-Inf, 18, 24, 34, 44, 54, 64, Inf))
levels(nytData$ageGroup) <- c("<18", "18-24", "25-34", "35-44", "45-54", "55-64", "65+")
nytData$Gender = factor(nytData$Gender, levels=c(1,0), labels = c("male", "female"))
head(nytData)
ggplot(data=nytData, aes(x=ageGroup, y=Impressions, fill=ageGroup)) + geom_bar(stat="identity") + theme_bw()
nytData %>% filter(Impressions>0 & Signed_In == 1) %>% ggplot(aes(x=ageGroup, y=Impressions, fill=ageGroup)) + geom_bar(stat="identity") + theme_bw()
nytData %>% filter(Impressions>0 & Signed_In == 1) %>%
group_by(ageGroup) %>%
summarise(Impressions = sum(Impressions), Clicks = sum(Clicks)) %>%
ggplot(aes(x=ageGroup, y=Clicks/Impressions, fill=ageGroup)) + geom_bar(stat="identity") + theme_bw()
ggplot(data=nytData, aes(x=ageGroup, y=Impressions, fill=ageGroup)) + geom_bar(stat="identity") + theme_bw()
nytData$CTR <- nytData$Clicks/nytData$Impressions
head(nytData)
#Make two histograms: one for male CTR and one for female CTR.
ggplot(subset(nytData, Impressions>0), aes(x=CTR,y="male",fill=male))+
geom_histogram(binwidth=1)
#Make two histograms: one for male CTR and one for female CTR.
ggplot(subset(nytData, Impressions>0), aes(x=nytData$CTR,y=nytData$Gender=="male",fill=male))+
geom_histogram(binwidth=1)
#Make two histograms: one for male CTR and one for female CTR.
ggplot(subset(nytData, Impressions>0), aes(x=nytData$CTR,y=nytData$Gender=="male",fill=Gender))+
geom_histogram(binwidth=1)
#Make two histograms: one for male CTR and one for female CTR.
ggplot(subset(nytData, Gender='male'), aes(x=nytData$CTR,fill=Gender))+
geom_histogram(binwidth=1)
head(nytData)
male <- nytdata$Gender = 'male'
nytData %>% filter(Gender == 'male') %>% ggplot(aes(x=nytData$CTR,fill=Gender))+
geom_histogram(binwidth=1)
nytData %>% filter(Gender == 'male') %>% ggplot(aes(x=CTR,fill=Gender))+
geom_histogram(binwidth=1)
head(nytData)
nytData %>% filter(Gender == 'male') %>% ggplot(aes(x=CTR,fill=Gender))+
geom_histogram(binwidth=1)
nytData %>% filter(Gender == 'female') %>% ggplot(aes(x=CTR,fill=Gender))+
geom_histogram(binwidth=1)
head(nytData)
#load first day dataset
fileLocation <- "http://stat.columbia.edu/~rachel/datasets/nyt1.csv"
nytData %>% mutate(CTR = Clicks / Impressions)
head(nytData)
nytData %>% filter(CTR>0) %>% ggplot(aes(CTR)) + facet_wrap(~Gender) + geom_histogram()
#boxplots for CTR
nytData %>% filter(CTR>0) %>% ggplot(aes(CTR)) + geom_boxplot(aes(Gender,CTR))
#t-test
t.test(CTR-Gender, data=filter(nytData,CTR>0))
#t-test
t.test(CTR-Gender, data = filter(nytData, CTR > 0))
#t-test
t.test(CTR~Gender, data = filter(nytData, CTR > 0))
library(dplyr)
library(ggplot2)
#read in the two .csv files
beers <- read.csv("Beers.csv")
brew <- read.csv("Breweries.csv")
#1 - How many breweries are present in each state?
table(brew$State)
#2
#Rename columns for merging
beers2 <- rename(beers, Brew_ID = Brewery_id, BeerName = Name)
#Merge by 'Brew_ID'
df <- merge(brew, beers2, by = c("Brew_ID"), all=TRUE)
#Rename the 'Name' column to BreweryName
df <- rename(df, BreweryName = Name)
#Print the first and last 6 items
head(df, 6)
tail(df, 6)
#3 - Report the number of NA's in each column.
colSums( is.na(df) )
#4 - Compute the median alcohol content and international bitterness unit for each state.
#  - Plot a bar chart to compare.
group <- aggregate( df[,7:8], list(df$State), median)
colnames(group) <- c("State", "MedianABV", "MedianIBU" )
#Not removing the rows containing NA
#ggplot(data=group, aes(x=State, y = MedianABV) ) + geom_bar(stat="identity")
#ggplot(data=group, aes(x=State, y = MedianIBU) ) + geom_bar(stat="identity")
#Removing the rows containing NA
ggplot(data=subset(group, !is.na(MedianABV)), aes(x=State, y = MedianABV) ) + geom_bar(stat="identity")
ggplot(data=subset(group, !is.na(MedianIBU)), aes(x=State, y = MedianABV) ) + geom_bar(stat="identity")
#5
df[which.max(df$ABV),][4]
df[which.max(df$IBU),][4]
#6
summary(df$ABV)
#7
ggplot(data = df, aes(x = IBU, y = ABV)) + geom_point()
#Yes there appears to a positive linear coorelation between the ABV and IBU
beers2 <- rename(beers, Brew_ID = Brewery_id, BeerName = Name)
#Merge by 'Brew_ID'
df <- merge(brew, beers2, by = c("Brew_ID"), all=TRUE)
#Rename the 'Name' column to BreweryName
df <- rename(df, BreweryName = Name)
#Print the first and last 6 items
head(df, 6)
head(df, 6)
table(brew$State)
beers2 <- rename(beers, Brew_ID = Brewery_id, BeerName = Name)
df <- merge(brew, beers2, by = c("Brew_ID"), all=TRUE)
df <- rename(df, BreweryName = Name)
head(df, 6)
#Print the first and last 6 items
head(df,6)
head(df)
library(dplyr)
library(ggplot2)
#read in the two .csv files
beers <- read.csv("Beers.csv")
brew <- read.csv("Breweries.csv")
#1 - How many breweries are present in each state?
table(brew$State)
#2
#Rename columns for merging
beers2 <- rename(beers, Brew_ID = Brewery_id, BeerName = Name)
#Merge by 'Brew_ID'
df <- merge(brew, beers2, by = c("Brew_ID"), all=TRUE)
#Rename the 'Name' column to BreweryName
df <- rename(df, BreweryName = Name)
#Print the first and last 6 items
head(df)
tail(df, 6)
#3 - Report the number of NA's in each column.
colSums( is.na(df) )
#4 - Compute the median alcohol content and international bitterness unit for each state.
#  - Plot a bar chart to compare.
group <- aggregate( df[,7:8], list(df$State), median)
colnames(group) <- c("State", "MedianABV", "MedianIBU" )
#Not removing the rows containing NA
#ggplot(data=group, aes(x=State, y = MedianABV) ) + geom_bar(stat="identity")
#ggplot(data=group, aes(x=State, y = MedianIBU) ) + geom_bar(stat="identity")
#Removing the rows containing NA
ggplot(data=subset(group, !is.na(MedianABV)), aes(x=State, y = MedianABV) ) + geom_bar(stat="identity")
ggplot(data=subset(group, !is.na(MedianIBU)), aes(x=State, y = MedianABV) ) + geom_bar(stat="identity")
#5
df[which.max(df$ABV),][4]
df[which.max(df$IBU),][4]
#6
summary(df$ABV)
#7
ggplot(data = df, aes(x = IBU, y = ABV)) + geom_point()
#Yes there appears to a positive linear coorelation between the ABV and IBU
###The R libraries used are:
library(dplyr)
library(ggplot2)
###library(expss)
###library(RColorBrewer)
###Reads in the two .csv files
beers <- read.csv("Beers.csv")
brew <- read.csv("Breweries.csv")
###Creates a table of the unique values in brew$State and the number of occurances for that value
numBrewPerState <- table(brew$State)
numBrewPerState
###Renames the columns Brewery_id to Brew_ID and Name to BeerName for merging
beers2 <- rename(beers, Brew_ID = Brewery_id, BeerName = Name)
###Merges the two data sets by 'Brew_ID'
df <- merge(brew, beers2, by = c("Brew_ID"), all=TRUE)
###Renames the 'Name' column to BreweryName
df <- rename(df, BreweryName = Name)
###Removes spaces from around the state abbreviations
df$State <- gsub("[ ]*", "", df$State)
###Prints the first and last 6 items in the merged data.frame
print( head(df, 6), row.names = FALSE)
print(tail(df, 6), row.names = FALSE)
df$Style[df$Style == ""] <- NA
###Creates a True/False matrix of the rows have an NA value, then sums up the number
colSums( is.na(df) )
###Medians computed in columns 7 and 8 based on df$State
group <- df %>% group_by(State) %>% summarise(MedianABV = median(ABV, na.rm=T), MedianIBU = median(IBU, na.rm=T)) %>% as.data.frame()
###Plots the data in two separate bar charts excluding the NA rows
ggplot(data=subset(group, !is.na(MedianABV)), aes(x=State, y = MedianABV) ) +
geom_bar(stat="identity") +
theme(axis.text.x = element_text(size=6)) +
scale_y_continuous(breaks=seq(0,0.07,0.005), labels = scales::percent) +
coord_cartesian(ylim=c(0.035, 0.065))
ggplot(data=subset(group, !is.na(MedianIBU)), aes(x=State, y = MedianIBU) ) +
geom_bar(stat="identity") +
theme(axis.text.x = element_text(size=6))
###Gets the max ABV row and gives the state
max.abv <- df[which.max(df$ABV),][4]
###Gets the max IBU row and gives the state
max.ibu <- df[which.max(df$IBU),][4]
###Puts the two values into a new dataframe
maxvals <- cbind(max.abv, max.ibu)
###Sets the column names to be correct
colnames(maxvals) <- c("Max_ABV", "Max_IBU")
###Prints out the max ibu and max abv while getting rid of the row numbers
print(maxvals, row.names = FALSE)
###Creates the summary of df$ABV
summary(df$ABV)
###Creates a scatterplot of ABV vs IBU. Colors only the Y axis.
###Centers the title
###Sets the x and y labels
###Sets the title of the chart
###Sets how often the y ticks occur, what values the chart shows, and makes the labels a %
###Sets how often the x ticks occur, and what values the chart shows
###Sets the low/mid/high colors for the y axis, and sets the midpoint
###Creates the mean line that goes through the chart
ggplot(data = df, aes(x = IBU, y = ABV, color=ABV)) +
geom_point() +
theme(plot.title = element_text(hjust = 0.5)) +
labs(x = "International Bitterness Units (IBU)", y = "Alcohol by Volume (ABV)") +
ggtitle("Alcohol By Volume vs International Bitterness Units of Beer") +
scale_y_continuous(breaks=seq(0,0.2,0.02), limits = c(0.02, 0.125), labels = scales::percent) +
scale_x_continuous(breaks=seq(0,160,10), limits = c(0, 140)) +
scale_color_gradient2(low = "yellow3", mid = "pink", high = "maroon4", midpoint = 0.056, space = "Lab") +
geom_smooth(colour = "black", linetype = "dashed", fill="yellow")
###The R libraries used are:
library(dplyr)
library(ggplot2)
###Reads in the two .csv files
beers <- read.csv("Beers.csv")
brew <- read.csv("Breweries.csv")
###Creates a table of the unique values in brew$State and the number of occurances for that value
numBrewPerState <- table(brew$State)
numBrewPerState
###Renames the columns Brewery_id to Brew_ID and Name to BeerName for merging
beers2 <- rename(beers, Brew_ID = Brewery_id, BeerName = Name)
###Merges the two data sets by 'Brew_ID'
df <- merge(brew, beers2, by = c("Brew_ID"), all=TRUE)
###Renames the 'Name' column to BreweryName
df <- rename(df, BreweryName = Name)
###Removes spaces from around the state abbreviations
df$State <- gsub("[ ]*", "", df$State)
###Prints the first and last 6 items in the merged data.frame
print( head(df, 6), row.names = FALSE)
print(tail(df, 6), row.names = FALSE)
df$Style[df$Style == ""] <- NA
###Creates a True/False matrix of the rows have an NA value, then sums up the number
colSums( is.na(df) )
###Medians computed in columns 7 and 8 based on df$State
group <- df %>% group_by(State) %>% summarise(MedianABV = median(ABV, na.rm=T), MedianIBU = median(IBU, na.rm=T)) %>% as.data.frame()
###Plots the data in two separate bar charts excluding the NA rows
ggplot(data=subset(group, !is.na(MedianABV)), aes(x=State, y = MedianABV) ) +
geom_bar(stat="identity") +
theme(axis.text.x = element_text(size=6)) +
scale_y_continuous(breaks=seq(0,0.07,0.005), labels = scales::percent) +
coord_cartesian(ylim=c(0.035, 0.065))
ggplot(data=subset(group, !is.na(MedianIBU)), aes(x=State, y = MedianIBU) ) +
geom_bar(stat="identity") +
theme(axis.text.x = element_text(size=6))
###Gets the max ABV row and gives the state
max.abv <- df[which.max(df$ABV),][4]
###Gets the max IBU row and gives the state
max.ibu <- df[which.max(df$IBU),][4]
###Puts the two values into a new dataframe
maxvals <- cbind(max.abv, max.ibu)
###Sets the column names to be correct
colnames(maxvals) <- c("Max_ABV", "Max_IBU")
###Prints out the max ibu and max abv while getting rid of the row numbers
print(maxvals, row.names = FALSE)
###Creates the summary of df$ABV
summary(df$ABV)
###Creates a scatterplot of ABV vs IBU. Colors only the Y axis.
###Centers the title
###Sets the x and y labels
###Sets the title of the chart
###Sets how often the y ticks occur, what values the chart shows, and makes the labels a %
###Sets how often the x ticks occur, and what values the chart shows
###Sets the low/mid/high colors for the y axis, and sets the midpoint
###Creates the mean line that goes through the chart
ggplot(data = df, aes(x = IBU, y = ABV, color=ABV)) +
geom_point() +
theme(plot.title = element_text(hjust = 0.5)) +
labs(x = "International Bitterness Units (IBU)", y = "Alcohol by Volume (ABV)") +
ggtitle("Alcohol By Volume vs International Bitterness Units of Beer") +
scale_y_continuous(breaks=seq(0,0.2,0.02), limits = c(0.02, 0.125), labels = scales::percent) +
scale_x_continuous(breaks=seq(0,160,10), limits = c(0, 140)) +
scale_color_gradient2(low = "yellow3", mid = "pink", high = "maroon4", midpoint = 0.056, space = "Lab") +
geom_smooth(colour = "black", linetype = "dashed", fill="yellow")
###The R libraries used are:
library(dplyr)
library(ggplot2)
###Reads in the two .csv files
beers <- read.csv("Beers.csv")
brew <- read.csv("Breweries.csv")
###Creates a table of the unique values in brew$State and the number of occurances for that value
numBrewPerState <- table(brew$State)
numBrewPerState
###Renames the columns Brewery_id to Brew_ID and Name to BeerName for merging
beers2 <- rename(beers, Brew_ID = Brewery_id, BeerName = Name)
###Merges the two data sets by 'Brew_ID'
df <- merge(brew, beers2, by = c("Brew_ID"), all=TRUE)
###Renames the 'Name' column to BreweryName
df <- rename(df, BreweryName = Name)
###Removes spaces from around the state abbreviations
df$State <- gsub("[ ]*", "", df$State)
###Prints the first and last 6 items in the merged data.frame
print( head(df, 6), row.names = FALSE)
print(tail(df, 6), row.names = FALSE)
df$Style[df$Style == ""] <- NA
###Creates a True/False matrix of the rows have an NA value, then sums up the number
colSums( is.na(df) )
###Medians computed in columns 7 and 8 based on df$State
group <- df %>% group_by(State) %>% summarise(MedianABV = median(ABV, na.rm=T), MedianIBU = median(IBU, na.rm=T)) %>% as.data.frame()
###Plots the data in two separate bar charts excluding the NA rows
ggplot(data=subset(group, !is.na(MedianABV)), aes(x=State, y = MedianABV) ) +
geom_bar(stat="identity") +
theme(axis.text.x = element_text(size=6)) +
scale_y_continuous(breaks=seq(0,0.07,0.005), labels = scales::percent) +
coord_cartesian(ylim=c(0.035, 0.065))
ggplot(data=subset(group, !is.na(MedianIBU)), aes(x=State, y = MedianIBU) ) +
geom_bar(stat="identity") +
theme(axis.text.x = element_text(size=6))
###Gets the max ABV row and gives the state
max.abv <- df[which.max(df$ABV),][4]
###Gets the max IBU row and gives the state
max.ibu <- df[which.max(df$IBU),][4]
###Puts the two values into a new dataframe
maxvals <- cbind(max.abv, max.ibu)
###Sets the column names to be correct
colnames(maxvals) <- c("Max_ABV", "Max_IBU")
###Prints out the max ibu and max abv while getting rid of the row numbers
print(maxvals, row.names = FALSE)
###Creates the summary of df$ABV
summary(df$ABV)
###Creates a scatterplot of ABV vs IBU. Colors only the Y axis.
###Centers the title
###Sets the x and y labels
###Sets the title of the chart
###Sets how often the y ticks occur, what values the chart shows, and makes the labels a %
###Sets how often the x ticks occur, and what values the chart shows
###Sets the low/mid/high colors for the y axis, and sets the midpoint
###Creates the mean line that goes through the chart
ggplot(data = df, aes(x = IBU, y = ABV, color=ABV)) +
geom_point() +
theme(plot.title = element_text(hjust = 0.5)) +
labs(x = "International Bitterness Units (IBU)", y = "Alcohol by Volume (ABV)") +
ggtitle("Alcohol By Volume vs International Bitterness Units of Beer") +
scale_y_continuous(breaks=seq(0,0.2,0.02), limits = c(0.02, 0.125), labels = scales::percent) +
scale_x_continuous(breaks=seq(0,160,10), limits = c(0, 140)) +
scale_color_gradient2(low = "yellow3", mid = "pink", high = "maroon4", midpoint = 0.056, space = "Lab") +
geom_smooth(colour = "black", linetype = "dashed", fill="yellow")
###The R libraries used are:
library(dplyr)
library(ggplot2)
###Reads in the two .csv files
beers <- read.csv("Beers.csv")
brew <- read.csv("Breweries.csv")
###Creates a table of the unique values in brew$State and the number of occurances for that value
numBrewPerState <- table(brew$State)
numBrewPerState
###Renames the columns Brewery_id to Brew_ID and Name to BeerName for merging
beers2 <- rename(beers, Brew_ID = Brewery_id, BeerName = Name)
###Merges the two data sets by 'Brew_ID'
df <- merge(brew, beers2, by = c("Brew_ID"), all=TRUE)
###Renames the 'Name' column to BreweryName
df <- rename(df, BreweryName = Name)
###Removes spaces from around the state abbreviations
df$State <- gsub("[ ]*", "", df$State)
###Prints the first and last 6 items in the merged data.frame
print( head(df, 6), row.names = FALSE)
print(tail(df, 6), row.names = FALSE)
df$Style[df$Style == ""] <- NA
###Creates a True/False matrix of the rows have an NA value, then sums up the number
colSums( is.na(df) )
###Medians computed in columns 7 and 8 based on df$State
group <- df %>% group_by(State) %>% summarise(MedianABV = median(ABV, na.rm=T), MedianIBU = median(IBU, na.rm=T)) %>% as.data.frame()
###Plots the data in two separate bar charts excluding the NA rows
ggplot(data=subset(group, !is.na(MedianABV)), aes(x=State, y = MedianABV) ) +
geom_bar(stat="identity") +
theme(axis.text.x = element_text(size=6)) +
scale_y_continuous(breaks=seq(0,0.07,0.005), labels = scales::percent) +
coord_cartesian(ylim=c(0.035, 0.065))
ggplot(data=subset(group, !is.na(MedianIBU)), aes(x=State, y = MedianIBU) ) +
geom_bar(stat="identity") +
theme(axis.text.x = element_text(size=6))
###Gets the max ABV row and gives the state
max.abv <- df[which.max(df$ABV),][4]
###Gets the max IBU row and gives the state
max.ibu <- df[which.max(df$IBU),][4]
###Puts the two values into a new dataframe
maxvals <- cbind(max.abv, max.ibu)
###Sets the column names to be correct
colnames(maxvals) <- c("Max_ABV", "Max_IBU")
###Prints out the max ibu and max abv while getting rid of the row numbers
print(maxvals, row.names = FALSE)
###Creates the summary of df$ABV
summary(df$ABV)
###Creates a scatterplot of ABV vs IBU. Colors only the Y axis.
###Centers the title
###Sets the x and y labels
###Sets the title of the chart
###Sets how often the y ticks occur, what values the chart shows, and makes the labels a %
###Sets how often the x ticks occur, and what values the chart shows
###Sets the low/mid/high colors for the y axis, and sets the midpoint
###Creates the mean line that goes through the chart
ggplot(data = df, aes(x = IBU, y = ABV, color=ABV)) +
geom_point() +
theme(plot.title = element_text(hjust = 0.5)) +
labs(x = "International Bitterness Units (IBU)", y = "Alcohol by Volume (ABV)") +
ggtitle("Alcohol By Volume vs International Bitterness Units of Beer") +
scale_y_continuous(breaks=seq(0,0.2,0.02), limits = c(0.02, 0.125), labels = scales::percent) +
scale_x_continuous(breaks=seq(0,160,10), limits = c(0, 140)) +
scale_color_gradient2(low = "yellow3", mid = "pink", high = "maroon4", midpoint = 0.056, space = "Lab") +
geom_smooth(colour = "black", linetype = "dashed", fill="yellow")
###The R libraries used are:
library(dplyr)
library(ggplot2)
###Reads in the two .csv files
beers <- read.csv("Beers.csv")
brew <- read.csv("Breweries.csv")
###Creates a table of the unique values in brew$State and the number of occurances for that value
numBrewPerState <- table(brew$State)
numBrewPerState
###Renames the columns Brewery_id to Brew_ID and Name to BeerName for merging
beers2 <- rename(beers, Brew_ID = Brewery_id, BeerName = Name)
###Merges the two data sets by 'Brew_ID'
df <- merge(brew, beers2, by = c("Brew_ID"), all=TRUE)
###Renames the 'Name' column to BreweryName
df <- rename(df, BreweryName = Name)
###Removes spaces from around the state abbreviations
df$State <- gsub("[ ]*", "", df$State)
###Prints the first and last 6 items in the merged data.frame
print( head(df, 6), row.names = FALSE)
print(tail(df, 6), row.names = FALSE)
df$Style[df$Style == ""] <- NA
###Creates a True/False matrix of the rows have an NA value, then sums up the number
colSums( is.na(df) )
###Medians computed in columns 7 and 8 based on df$State
group <- df %>% group_by(State) %>% summarise(MedianABV = median(ABV, na.rm=T), MedianIBU = median(IBU, na.rm=T)) %>% as.data.frame()
###Plots the data in two separate bar charts excluding the NA rows
ggplot(data=subset(group, !is.na(MedianABV)), aes(x=State, y = MedianABV) ) +
geom_bar(stat="identity") +
theme(axis.text.x = element_text(size=6)) +
scale_y_continuous(breaks=seq(0,0.07,0.005), labels = scales::percent) +
coord_cartesian(ylim=c(0.035, 0.065))
ggplot(data=subset(group, !is.na(MedianIBU)), aes(x=State, y = MedianIBU) ) +
geom_bar(stat="identity") +
theme(axis.text.x = element_text(size=6))
###Gets the max ABV row and gives the state
max.abv <- df[which.max(df$ABV),][4]
###Gets the max IBU row and gives the state
max.ibu <- df[which.max(df$IBU),][4]
###Puts the two values into a new dataframe
maxvals <- cbind(max.abv, max.ibu)
###Sets the column names to be correct
colnames(maxvals) <- c("Max_ABV", "Max_IBU")
###Prints out the max ibu and max abv while getting rid of the row numbers
print(maxvals, row.names = FALSE)
###Creates the summary of df$ABV
summary(df$ABV)
###Creates a scatterplot of ABV vs IBU. Colors only the Y axis.
###Centers the title
###Sets the x and y labels
###Sets the title of the chart
###Sets how often the y ticks occur, what values the chart shows, and makes the labels a %
###Sets how often the x ticks occur, and what values the chart shows
###Sets the low/mid/high colors for the y axis, and sets the midpoint
###Creates the mean line that goes through the chart
ggplot(data = df, aes(x = IBU, y = ABV, color=ABV)) +
geom_point() +
theme(plot.title = element_text(hjust = 0.5)) +
labs(x = "International Bitterness Units (IBU)", y = "Alcohol by Volume (ABV)") +
ggtitle("Alcohol By Volume vs International Bitterness Units of Beer") +
scale_y_continuous(breaks=seq(0,0.2,0.02), limits = c(0.02, 0.125), labels = scales::percent) +
scale_x_continuous(breaks=seq(0,160,10), limits = c(0, 140)) +
scale_color_gradient2(low = "yellow3", mid = "pink", high = "maroon4", midpoint = 0.056, space = "Lab") +
geom_smooth(colour = "black", linetype = "dashed", fill="yellow")
#Sets the width of the charts
knitr::opts_chunk$set(out.width='800px', dpi=200)
#The R libraries used are:
library(dplyr)
library(ggplot2)
library(knitr)
library(kableExtra)
#Reads in the two .csv files
beers <- read.csv("./csv/Beers.csv")
brew <- read.csv("./csv/Breweries.csv")
#Creates a table of the unique values in brew$State and the number of occurances for that value
numBrewPerState <- as.data.frame(table(brew$State))
colnames(numBrewPerState) <- c("State", "Freq")
#Creates the bar graph of the number of breweries per state
ggplot(data=numBrewPerState, aes(x=State, y = Freq)) +
geom_histogram(stat="identity", col="black", aes(fill=Freq)) +
theme(axis.text.x = element_text(size=8,angle=90, vjust=0.5)) +
xlab("State") + ylab("Number of Breweries per State") +
scale_y_continuous( breaks=seq(0,50,5) ) +
geom_text(size=2, aes(label=Freq), position=position_dodge(width=0.9), vjust=-0.25) +
scale_fill_gradient2("Per State", low = "yellow3", mid="pink", high = "maroon4", midpoint=20)
#Renames the columns Brewery_id to Brew_ID and Name to BeerName for merging
beers2 <- rename(beers, Brew_ID = Brewery_id, BeerName = Name)
#Merges the two data sets by 'Brew_ID'
df <- merge(brew, beers2, by = c("Brew_ID"), all=TRUE)
#Renames the 'Name' column to BreweryName
df <- rename(df, BreweryName = Name)
#Removes spaces from around the state abbreviations
df$State <- gsub("[ ]*", "", df$State)
#Prints the first 6 items from the merged data.frame
kable(head(df,6)) %>% kable_styling(bootstrap_options = "striped")
